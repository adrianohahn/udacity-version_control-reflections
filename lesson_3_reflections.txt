Q: When would you want to use a remote repository rather than keeping all your work local?
A: When you want to colaborate with other users or programmers. Also when you use more than one computer.

Q: Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
A: Because you want to have control on what is being pushed or pulled.

Q: Describe the differences between forks, clones, and branches. When would you use one instead of another?
A: Forks are clones made on Github. When you fork a repository on Github, It can be tracked. 
   A Clone is a copy made from a repository to another.
   A branch allows you to work in a different version of the files, while keeping the master branch intact.

Q: What is the benefit of having a copy of the last known state of the remote stored locally?
A: Git can check if the tip of the copy of remote repository's branch is an ancestor of the local version, 
   and if it is true, Git can do a fast-forward merge.

Q: How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
A: The learning curve is the only reason that would justify not to use Git and Github. If you and people you're 
   collaborating with are working in a simple project and don't know Git and Github it could be a choice not to
   use them. In all other scenarios using Git would simplify and make it easier to work with the team.

Q: When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
A: Making changes in a master branch allows people to instantly (just after you commit and push) see your changes.
   In other hand when you need to experiment or propose something it's a good idea to use branches.